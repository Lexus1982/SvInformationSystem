@model NetworkEquipments.Web.Models.Network.NetworkModel

@{
    ViewBag.Title = "Добавление сегмента"; 
}

<h4>@ViewBag.Title</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

   <div class="form-group row">
        @Html.LabelFor(model => model.TownName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TownId", null, htmlAttributes: new { id = "TownId", @class = "form-control", onchange = "OnTownsSelectionChange('" +
                                                                                                                        @Url.Action("GetStreets", "Address") + "','" +
                                                                                                                        @Url.Action("GetAddresses", "Address") + "')" })
            @Html.ValidationMessageFor(model => model.TownName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StreetId", null, htmlAttributes: new { id = "StreetId", @class = "form-control", onchange = "OnStreetsSelectionChange('"+
                                                                                                                            @Url.Action("GetAddresses", "Address")+"')" })
            @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.ComplexHouse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AddressId", null, htmlAttributes: new { id = "AddressId", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ComplexHouse, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.SegmentNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SegmentNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SegmentNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.VlanManage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VlanManage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VlanManage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.VlanInternet, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VlanInternet, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VlanInternet, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.IpInterval, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IpInterval, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IpInterval, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Commentary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Commentary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Commentary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Добавить" class="btn btn-sm btn-primary" />
            <a class="btn btn-sm btn-secondary" role="button" href='@Url.Action("Index", "Network")'>Отмена</a>
        </div>
    </div>
</div>
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/AddressUi.js")
}
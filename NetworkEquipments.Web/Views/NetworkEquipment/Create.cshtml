@model NetworkEquipments.Web.Models.NetworkEquipment.NetworkEquipmentModel

@{
    ViewBag.Title = "Добавление оборудования";
}

<h4>@ViewBag.Title</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.NetworkId)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            @Html.LabelFor(model => model.TownName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TownId", null, htmlAttributes: new { id = "TownId", @class = "form-control", onchange = "OnTownsSelectionChange('" +
                                                                                                                            @Url.Action("GetStreets", "Address") + "','" +
                                                                                                                            @Url.Action("GetAddresses", "Address") + "')" })
                @Html.ValidationMessageFor(model => model.TownName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StreetId", null, htmlAttributes: new { id = "StreetId", @class = "form-control", onchange = "OnStreetsSelectionChange('"+
                                                                                                                                @Url.Action("GetAddresses", "Address")+"')" })
                @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ComplexHouse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AddressId", null, htmlAttributes: new { id = "AddressId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ComplexHouse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Entrance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Entrance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Entrance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.EquipmentTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EquipmentTypeId", null, htmlAttributes: new { id = "EquipmentTypeId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquipmentTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Ip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Commentary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Commentary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Commentary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-sm btn-primary" />
                @Html.ActionLink("Отмена", "Index", new { networkId = @Model.NetworkId }, new { @class = "btn btn-sm btn-secondary", @role = "button" })
            </div>
        </div>
    </div>
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/AddressUi.js")
}
